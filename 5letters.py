file=open("5letters.txt",encoding='utf-8')

lines=file.readlines() #прочитываем файл по строкам
words=[] #создаём пустой список, в который добавятся все существительные из 5 букв из файла
for i in lines: # перебираем все строки файла
    word=i.replace("\n","") #удаляем спецсимвол из выборки
    words.append(word) #добавляем все файла в наш пустой список


temp=[] #создаём пустой список для временного использования в функциях
#он необходим, т.к. при прямом удалении из базового файла циклом
#индексы будут смещаться, и пропускаться слова

def remove_banned(b): #создаём функцию, удаляющие слова с буквами, которых точно нет
    for letters in words: #перебираем каждое слово в списке
        letter=list(letters) #перебираемое слово разбиваем на буквы
        if key[b-1] in letter: #находим слова, в которых есть буквы, отсутствующие в искомом слове
            temp.append(letters) #добавляем найденные слова во временный список
    for i in temp: #перебираем слова во временном списке
        words.remove(i) #удаляем все слова, содержащиеся во временном списке, из основго списка
    temp.clear() #очищаем временный список для дальнейшей работы

def revome_not_exectly(n): # создаем функцию, которая удаляет слова без точной буквы на точной позиции
    for letters in words: #перебираем каждое слово в списке
        letter=list(letters) #перебираемое слово разбиваем на буквы
        if key[n-1]!=letter[int(n)-1]: #проверка соответствия букв на заданной позиции
            temp.append(letters) #добавляем слова, где буквы на позиции нет, во временное хранилище
    # перебираем все слова из временного хранилища, и удаляем их из основного
    for i in temp: #перебираем слова во временном списке
        words.remove(i) #удаляем все слова, содержащиеся во временном списке, из основго списка
    temp.clear() #очищаем временный список для дальнейшей работы

def remove_not_present(m): #создаём функцию, которая удаляет слова, в которых нет обязательной буквы,
# А также слова, где обязательная буква есть, но не на том месте
    for musts in words: #перебираем каждое слово в списке всех слов
        must=list(musts) #перебираемое слово разбиваем на буквы
        if (key[m-1] not in must)==True: #находим слова, в которых нет присутствующей буквы
            temp.append(musts) #добавляем слова без присутствующей буквы во временное хранилище
        if key[m-1]==must[m-1]: #Находим слова, с буквой на той позиции, где её быть не должно, хотя буква есть
            temp.append(musts) #их тоже добавляем во временное хранилище
    for i in temp:#перебираем слова во временном списке
        words.remove(i)#удаляем все слова, содержащиеся во временном списке, из основго списка
    temp.clear() #очищаем временный список для дальнейшей работы

print("Начинаем игру! Лучше всего начать с таких слов как \"повар\" или \"дрова\"")
print("Все слова вводятся строчными буквами! При вводе цифр следите за пробелами!")

while len(words)!=1: # создаём цикл ,который работает до тех пор, пока в живых не останется только 1 слово
    key = list(input("Введите слово, которое проверим: ")) #вводим слово, которое хотим проверить в игре
    if len(key)!=5: #Проверка на то, что в слове действительно 5 буква, и не было допущено ошибки
        print("Некорректное число букв. Попробуйте ещё раз.")
        continue #перезапускаем цикл, если количество букв не соответствует 5ти.

    absent=list(map(int,input("Введите через пробел номера букв, которых ТОЧНО НЕТ в слове: ").split()))
    #Создаём список с индексами букв, которых точно нет в слове
    exactly=list(map(int,input("Введите через пробел номера букв, которые НА СВОЁМ МЕСТЕ в слове: ").split()))
    # Создаём список с индексами букв, которые есть точно на своём месте
    present = list(map(int,input("Введите через пробел номера букв, которые ЕСТЬ, НО НЕ НА СВОЁМ МЕСТЕ в слове: ").split()))
    # Создаём список с индексами букв, которые есть, но не на своём месте

    for i in absent: #Перебираем индекса отсутствующих букв
        remove_banned(i) #Удаляем отстствующие слова из общего списка

    for i in exactly:#Перебираем индексы точных букв
        revome_not_exectly(i) #Удаляем слова, не соответствующие критерию

    for i in present:#Перебираем индексы присутствующих букв
        remove_not_present(i)#Удаляем слова, в которых нет нужных букв
        # А также слова, где буква есть, но на другом месте

    if len(words)==0: #Проверка на то, что в списке слов ещё остались слова.
        # Такое может случится, если присутствие букв указали некорректно,
        # или если в исходном списке нет какого-то слова
        print("Где-то была допущена ошибка, или слова нет в базе =( Попробуйте начать заново.")
        break #Прерываем цикл. Нужно начинать с нуля.
    print("Искомое слово одно из этих")
    print(words) #Перечисляем все оставшиеся слова, подходящие под наши критерии

else: #Когда осталось последнее слово - выдаём ответ
    print(f"Ура! Ваше слово - {words[0]}") #В списке должен к этому моменту остаться только 1 элемент
file.close()